#!/bin/bash

echo '===========================' >> /tmp/konsolesetup.out
echo $(date) >> /tmp/konsolesetup.out

source ~/lib/functions

SESSIONS=
for i in ~/tmux_sessions/*.session; do SESSIONS="$SESSIONS $($i)" ; done
echo "SESSIONS=$SESSIONS" >> /tmp/konsolesetup.out

konsole --workdir '~' -e 'bash' > /tmp/konsole.out & 2>&1 
window_id=
while [[ -z $window_id ]]; do
    # what's the funny hyphen symbol? Shell â€“ Konsole
    window_id=$(WindowName2WindowID "Konsole")
    echo window_id=$window_id >> /tmp/konsolesetup.out
done

# activation and sizing and focusing seems to be unnecesary if we sleep for a few seconds, long enough for things to settle
# this seems to work better if it is the topmost window
xdotool windowactivate $window_id
xdotool windowfocus $window_id

# maximize it
#xdotool windowsize $window_id 100% 100% # this seems to get the size wrong, wut?  # what does --sync actually do except for mess up the order in which things are run??
#xdotool key --window $window_id Alt+space x # wut?

sleep 1
xdotool key --window $window_id  s s h space minus t space m e d i a p c space t m u x space minus 2 space a t t a c h space minus t space e m a i l Return
for s in $SESSIONS; do
    s0=$(python3 -c "print(' '.join([x for x in '$s']))") # spell each session name like t h i s
    xdotool key --window $window_id  Shift+Control+t
    sleep .1
    #xdotool key --window $window_id  t m u x space a t t a c h space minus t space $s0  Return
    xdotool key --window $window_id  t m u x space minus v   space a t t a c h space minus t space $s0  Return
    sleep .1
    xdotool key --window $window_id  Control+Alt+s
    sleep .1
    xdotool key --window $window_id  $s0 Return
    sleep .1
done
xdotool key --window $window_id  Shift+Control+t
sleep .1
xdotool key --window $window_id  s s h space minus t space m e d i a p c space t m u x space minus 2 space a t t a c h space minus t space c h a t Return
sleep .1
xdotool key --window $window_id  Control+Alt+s
sleep .1
xdotool key --window $window_id  c h a t Return

for i in $(pidof tmux); do sigwinch $i; done

#for i in $(pidof tmux); do kill -s SIGWINCH $i; for j in $(ps --pid $i -o ppid h); do kill -s SIGWINCH $j; done; done

