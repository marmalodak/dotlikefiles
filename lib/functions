#!/bin/bash

# redirecting tmux does not work unless you set EVENT_NOEPOLL=1
# http://comments.gmane.org/gmane.comp.terminal-emulators.tmux.user/1958
# http://sourceforge.net/tracker/index.php?func=detail&aid=3199205&group_id=200378&atid=973262
# http://sourceforge.net/tracker/index.php?func=detail&aid=3489496&group_id=200378&atid=973262

export EVENT_NOEPOLL=1

function tmux_inside() # return 1 if we are running within a tmux session already?
{
    if [[ ! -z "$TMUX" || ! -z "$TMUX_PANE" ]]; then
        echo 1
        return 1
    fi
    echo 0
    return 0
}

function tmux_session_up()
{
    tmux has-session -t "$1" > /tmp/tmux_session_up.$USER.out 2>&1
    echo $((1-$?))
    exit 0
}

function tmux_session_new()
{
    #echo 'sesion_new()'
    #echo "'$1'=$1,'$2'=$2"
    #echo 'sesion_new()'
    status=1
    #echo "!tmux_inside=" $((! $(tmux_inside) ))
    #echo "!tmux_session_up=$((! $(tmux_session_up $1) ))"
    if [[ $((! $(tmux_inside) )) && $((! $(tmux_session_up $1) )) ]]; then
        ( cd "$2"; tmux new-session -d -s "$1" > /tmp/tmux_session_new.$USER.out 2>&1 )
        status=$?
    fi
    echo "$status"
    return "$status"
}

function tmux_up0() # this is useless because we're going to launch tmux
{
    ps -C tmux > /tmp/tmux_up.$USER.out 2>&1
    echo $?
    return 0
    if [ "$?" -eq 0 ]; then
        echo 0
    else
        echo 1
    fi
    return 0
}
